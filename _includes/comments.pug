section.page__reactions
  h3 Comments
  p
    | there's some 
    a(href='https://github.com/eduardoboucas/staticman/issues/222') rate-limiting
    |  going on with my comment provider atm, so i'd reccommend copying your message incase it gets blocked and retrying
  | {% unless page.comments_locked == true %}
  div.create_comment#form_move(style="flex-basis: 100%;")
    form(method="POST", action="https://api.staticman.net/v2/entry/{{site.github.repo}}/{{site.github.branch}}/comments")
      //- input(name="fields[replying_to]", id="form_index", type="hidden", value="")
      input(name="options[redirect]", type="hidden", value="{{post.url}}")
      input(name="options[slug]", type="hidden", value="{{page.slug}}")
      input(name="fields[name]", type="text", placeholder="Display name")
      //- spam honey pot, hopefully minimises russian shitposting
      input(name="fields[honey]", type="checkbox" style="display: none;")
      input(name="fields[email]", type="email", placeholder="E-mail address (optional)", size="30")
      button(type="submit") Submit
      textarea(name="fields[message]", rows="3", placeholder="Add a public comment...")
  | {% endunless %}

  br

  | {% if site.data.comments[page.slug] %}
  #comments.js-comments
    | {% assign comments = site.data.comments[page.slug] | sort | where_exp: 'comment', 'comment[1].replying_to == nil' %}
    | {% for comment in comments %}
    | {% assign index       = forloop.index %}
    | {% assign replying_to = comment[1].replying_to | to_integer %}
    | {% assign email       = comment[1].email %}
    | {% assign name        = comment[1].name %}
    | {% assign date        = comment[1].date %}
    | {% assign message     = comment[1].message %}
    | {% include comment.html index=index date=date replying_to=replying_to email=email name=name message=message %}
    | {% endfor %}
  | {% endif %}
  
script.
  //shitty glue code
  function setReplyable() {
    var input = document.createElement("input");
    input.type = "hidden";
    input.name = "fields[replying_to]";
    input.id = "form_index";
    form = document.getElementsByTagName("FORM")[0];
    form.appendChild(input);
  }

  function moveForm(commId, parentId, respondId, postId) {
    document.getElementById(commId).appendChild(document.getElementById("form_move"));
    if (document.getElementById("form_index")) {
      // remove old replying_to
      var input = document.getElementById("form_index");
      input.parentNode.removeChild(input);
      setReplyable();
    } else { setReplyable(); }
    document.getElementById("form_index").value = parentId;
    console.log(document.getElementById("form_index").value);
  }